def remove_white_background(image_path, threshold=240):
    # Load the image
    image = cv2.imread(image_path, cv2.IMREAD_UNCHANGED)
    
    # Ensure the image has an alpha channel
    if image.shape[2] == 3:  # No alpha channel, add one
        alpha_channel = np.ones(image.shape[:2], dtype=np.uint8) * 255  # Fully opaque
        image = cv2.merge([image, alpha_channel])

    # Split channels
    bgr_image = image[:, :, :3]  # RGB channels
    alpha_channel = image[:, :, 3]  # Alpha channel
    
    # Detect white background areas using color thresholding
    lower_white = np.array([threshold, threshold, threshold])
    upper_white = np.array([255, 255, 255])
    mask = cv2.inRange(bgr_image, lower_white, upper_white)

    # Set alpha to 0 for detected white areas
    alpha_channel[mask == 255] = 0  # Make background transparent
    
    # Merge channels back with modified alpha
    image_with_alpha = cv2.merge([bgr_image[:, :, 0], bgr_image[:, :, 1], bgr_image[:, :, 2], alpha_channel])

    return image_with_alpha
